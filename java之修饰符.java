访问修饰符
  public : 对所有类可见。使用对象：类、接口、变量、方法
  protected : 对同一包内的类和所有子类可见。使用对象：变量、方法。 注意：不能修饰类（外部类）
  default (即缺省，什么也不写）: 在同一包内可见，不使用任何修饰符。使用对象：类、接口、变量、方法。
  private : 在同一类内可见。使用对象：变量、方法。 注意：不能修饰类（外部类）
  
非访问修饰符
  static 修饰符，用来修饰类方法和类变量。
  final 修饰符，用来修饰类、方法和变量，final 修饰的类不能够被继承，修饰的方法不能被继承类重新定义，修饰的变量为常量，是不可修改的。
  abstract 修饰符，用来创建抽象类和抽象方法。
  synchronized 和 volatile 修饰符，主要用于线程的编程。
  注：final和abstract不能同时修饰。final不能j被继承、重写等，abstact必须要继承、重写

静态与非静态：
  1.内存分配
    静态变量在应用程序初始化时，就存在于内存当中，直到它所在的类程序运行结束时才消亡；
    而非静态变量需要被实例化后才会分配内存。
  2.生存周期
    静态变量生存周期为应用程序的存在周期；
    非静态变量的存在周期取决于实例化的类的存在周期。
  3.调用方式
     静态变量能够通过“类.静态变量名”调用，也能通过类的实例（即对象）调用；
     非静态变量当该变量所在的类被实例化后，可通过实例名直接调用。
   4.共享方式
     静态变量是全局变量，被所有类的实例对象共享，即一个实例的改变改变了静态变量的值，其他同类的实例读到的就是变化后的的值；
     非静态变量是局部变量，不共享。
   5.访问方式
     静态成员不能直接访问非静态成员；
     非静态成员可以直接访问静态成员。
